import { logger } from '../../src/utils/logger.js';

export function formatUptime(minutes) {
  const hours = Math.floor(minutes / 60);
  const mins = minutes % 60;
  if (hours > 0) {
    return `${hours}—á ${mins}–º`;
  }
  return `${mins}–º`;
}

export function formatStatusMessage(monitor, stats) {
  const now = new Date();
  const botUptimeMs = now - monitor.botStartTime;
  const botUptimeMinutes = Math.floor(botUptimeMs / (1000 * 60));

  logger.debug(`üïê –í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞: ${botUptimeMinutes} –º–∏–Ω—É—Ç (${botUptimeMs} –º—Å)`);
  logger.debug(`üïê –í—Ä–µ–º—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞: ${monitor.botStartTime}`);
  logger.debug(`üïê –¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è: ${now}`);

  let serverUptimeMinutes = 0;
  let serverInfo = `‚Ä¢ –°—Ç–∞—Ç—É—Å: ${stats.serverRunning ? '‚úÖ –ó–∞–ø—É—â–µ–Ω' : '‚ùå –ù–µ –∑–∞–ø—É—â–µ–Ω'}`;

  if (stats.serverStartTime) {
    const diffMs = now - stats.serverStartTime;
    serverUptimeMinutes = Math.floor(diffMs / (1000 * 60));

    serverInfo += `\n‚Ä¢ –í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: ${formatUptime(serverUptimeMinutes)}`;
    serverInfo += `\n‚Ä¢ –ó–∞–ø—É—â–µ–Ω: ${stats.serverStartTime.toLocaleString('ru-RU', { timeZone: 'Europe/Rome' })}`;
  }

  const scraping = stats.scrapingStats || {};
  const lastRun = stats.serverStartTime ?
    stats.serverStartTime.toLocaleString('ru-RU', { timeZone: 'Europe/Rome' }) :
    '–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö';

  let watchdogInfo = '‚Ä¢ –°—Ç–∞—Ç—É—Å: ‚ùå –ù–µ–¥–æ—Å—Ç—É–ø–µ–Ω';
  if (stats.watchdogStatus) {
    const watchdog = stats.watchdogStatus;
    const watchdogUptimeMinutes = Math.floor(watchdog.uptime / 60);
    watchdogInfo = `‚Ä¢ –°—Ç–∞—Ç—É—Å: ${watchdog.isRunning ? '‚úÖ –†–∞–±–æ—Ç–∞–µ—Ç' : '‚ùå –û—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω'}\n` +
      `‚Ä¢ –í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: ${formatUptime(watchdogUptimeMinutes)}\n` +
      `‚Ä¢ –ü–æ—Å–ª–µ–¥–Ω—è—è –ø—Ä–æ–≤–µ—Ä–∫–∞: ${watchdog.lastCheckTime ? new Date(watchdog.lastCheckTime).toLocaleString('ru-RU', { timeZone: 'Europe/Rome' }) : '–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö'}\n` +
      `‚Ä¢ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–æ–≤: ${watchdog.restartCount}`;
  }

  return `üìä **–°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–µ—Ä–∞**

üóÑÔ∏è **–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö:**
‚Ä¢ –°—Ç–∞—Ç—É—Å: ${stats.dbConnected ? '‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–æ' : '‚ùå –ù–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è'}

üêï **Watchdog:**
${watchdogInfo}

üñ•Ô∏è **–°–∏—Å—Ç–µ–º–∞ (–±–æ—Ç):**
‚Ä¢ –°—Ç–∞—Ç—É—Å: ‚úÖ –ó–∞–ø—É—â–µ–Ω
‚Ä¢ –í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: ${formatUptime(botUptimeMinutes)}
‚Ä¢ –ü–∞–º—è—Ç—å: ${(process.memoryUsage().heapUsed / 1024 / 1024).toFixed(2)} MB
‚Ä¢ –ü–ª–∞—Ç—Ñ–æ—Ä–º–∞: ${process.platform}
‚Ä¢ Node.js: ${process.version}

üöÄ **–°–µ—Ä–≤–µ—Ä —Å–∫—Ä–∞–ø–µ—Ä–∞:**
${serverInfo}


üìà **–°–∫—Ä–∞–ø–∏–Ω–≥ (–∏–∑ API):**
‚Ä¢ –í—Å–µ–≥–æ –∑–∞–ø—É—Å–∫–æ–≤: ${scraping.totalRuns || 0}
‚Ä¢ –£—Å–ø–µ—à–Ω—ã—Ö: ${scraping.successfulRuns || 0}
‚Ä¢ –û—à–∏–±–æ–∫: ${scraping.failedRuns || 0}
‚Ä¢ –ü–æ—Å–ª–µ–¥–Ω—è—è –æ—à–∏–±–∫–∞: ${scraping.lastError || '–ù–µ—Ç'}
‚Ä¢ –ü–æ—Å–ª–µ–¥–Ω–∏–π –∑–∞–ø—É—Å–∫: ${lastRun}

‚è∞ –í—Ä–µ–º—è: ${new Date().toLocaleString('ru-RU', { timeZone: 'Europe/Rome' })}`;
}


